unit uFutureSingleTradeOrderInputGridForm;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs,
  uCommonOrderInputGridForm, cxGraphics, cxControls, cxLookAndFeels,
  cxLookAndFeelPainters, cxStyles, cxEdit, dxSkinsCore, dxSkinBlack, dxSkinBlue,
  dxSkinBlueprint, dxSkinCaramel, dxSkinCoffee, dxSkinDarkRoom, dxSkinDarkSide,
  dxSkinDevExpressDarkStyle, dxSkinDevExpressStyle, dxSkinFoggy,
  dxSkinGlassOceans, dxSkinHighContrast, dxSkiniMaginary, dxSkinLilian,
  dxSkinLiquidSky, dxSkinLondonLiquidSky, dxSkinMcSkin, dxSkinMetropolis,
  dxSkinMetropolisDark, dxSkinMoneyTwins, dxSkinOffice2007Black,
  dxSkinOffice2007Blue, dxSkinOffice2007Green, dxSkinOffice2007Pink,
  dxSkinOffice2007Silver, dxSkinOffice2010Black, dxSkinOffice2010Blue,
  dxSkinOffice2010Silver, dxSkinOffice2013DarkGray, dxSkinOffice2013LightGray,
  dxSkinOffice2013White, dxSkinPumpkin, dxSkinSeven, dxSkinSevenClassic,
  dxSkinSharp, dxSkinSharpPlus, dxSkinSilver, dxSkinSpringTime, dxSkinStardust,
  dxSkinSummer2008, dxSkinTheAsphaltWorld, dxSkinsDefaultPainters,
  dxSkinValentine, dxSkinVS2010, dxSkinWhiteprint, dxSkinXmas2008Blue, Data.DB,
  cxClasses, dxmdaset, cxInplaceContainer, cxVGrid, cxDBVGrid,
  cxEditRepositoryItems, cxDBEditRepository, cxDBLookupComboBox, cxLabel,
  cxDropDownEdit, cxRadioGroup, cxSpinEdit, cxExtEditRepositoryItems,
  cxContainer, cxTextEdit, Vcl.Menus, Vcl.StdCtrls, cxButtons, cxMaskEdit,
  cxLookupEdit, cxDBLookupEdit, cxCustomData;

type
  TfrmFutureSingleTradeOrderInputGrid = class(TfrmCommonOrderInputGrid)
    mdCommonProductId: TStringField;
    mdCommonAssetId: TStringField;
    mdCommonStockCode: TStringField;
    mdCommonMM: TStringField;
    mdCommonAmount: TStringField;
    mdCommonPrice: TStringField;
    mdCommonInvestType: TStringField;
    mdCommonPriceType: TStringField;
    mdCommonAmountMax: TStringField;
    mdStockInfo: TdxMemData;
    mdProductInfo: TdxMemData;
    mdAssetInfo: TdxMemData;
    dsProductInfo: TDataSource;
    dsAssetInfo: TDataSource;
    dsStockInfo: TDataSource;
    mdStockInfoStockCode: TStringField;
    mdStockInfoStockName: TStringField;
    erMainRecId: TcxDBEditorRow;
    erMainMM: TcxDBEditorRow;
    erMainKP: TcxDBEditorRow;
    erStockCode: TcxDBMultiEditorRow;
    erAmount: TcxDBMultiEditorRow;
    mdProductInfoProductId: TStringField;
    mdProductInfoProductName: TStringField;
    mdStockInfoInterCode: TStringField;
    mdAssetInfoAssetId: TStringField;
    mdAssetInfoAssetName: TStringField;
    erProductId: TcxDBMultiEditorRow;
    erAssetId: TcxDBMultiEditorRow;
    erPrice: TcxDBMultiEditorRow;
    mdCommonInterCode: TStringField;
    mdCommonEntrustDirection: TStringField;
    mdCommonKP: TStringField;
    mdInvestInfo: TdxMemData;
    dsInvestInfo: TDataSource;
    mdPriceInfo: TdxMemData;
    dsPriceInfo: TDataSource;
    mdInvestInfoInvestType: TStringField;
    mdPriceInfoPriceType: TStringField;
    mdPriceInfoPriceTypeName: TStringField;
    mdInvestInfoInvestTypeName: TStringField;
    comProductId: TcxEditRepositoryLookupComboBoxItem;
    comAssetId: TcxEditRepositoryLookupComboBoxItem;
    comInvestType: TcxEditRepositoryLookupComboBoxItem;
    comPriceType: TcxEditRepositoryLookupComboBoxItem;
    comStockCode: TcxEditRepositoryLookupComboBoxItem;
    edtAmount: TcxEditRepositorySpinItem;
    edtPrice: TcxEditRepositorySpinItem;
    lblStockName: TcxEditRepositoryLabel;
    lblAmountMax: TcxEditRepositoryLabel;
    rgMM: TcxEditRepositoryRadioGroupItem;
    rgKP: TcxEditRepositoryRadioGroupItem;
    lblProductName: TcxEditRepositoryLabel;
    lblAssetName: TcxEditRepositoryLabel;
    mdStockInfoMarketNo: TStringField;
    mdCommonProductName: TStringField;
    mdCommonAssetName: TStringField;
    mdCommonStockName: TStringField;
    mdCommonMarketNo: TStringField;
    mdAssetInfoProductId: TStringField;
    btnSave: TcxButton;
    btnLoad: TcxButton;
    btnClearData: TcxButton;
    procedure comStockCodePropertiesEditValueChanged(Sender: TObject);
    procedure comProductIdPropertiesEditValueChanged(Sender: TObject);
    procedure comAssetIdPropertiesEditValueChanged(Sender: TObject);
    procedure comInvestTypePropertiesEditValueChanged(Sender: TObject);
    procedure comPriceTypePropertiesEditValueChanged(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure btnSaveClick(Sender: TObject);
    procedure btnLoadClick(Sender: TObject);
    procedure btnClearDataClick(Sender: TObject);
  private
    { Private declarations }
    procedure clearData;
  public
    { Public declarations }
  end;

var
  frmFutureSingleTradeOrderInputGrid: TfrmFutureSingleTradeOrderInputGrid;

implementation

uses
  uFutureSingleTradeDataCenter;
{$R *.dfm}

procedure TfrmFutureSingleTradeOrderInputGrid.btnClearDataClick(
  Sender: TObject);
begin
  inherited;
  mdCommon.Edit;
  mdCommon.ClearFields;
  mdCommon.CopyFields()
end;

procedure TfrmFutureSingleTradeOrderInputGrid.btnLoadClick(Sender: TObject);
begin
  inherited;
  mdCommon.LoadFromBinaryFile('memdata\memdatacommon');
end;

procedure TfrmFutureSingleTradeOrderInputGrid.btnSaveClick(Sender: TObject);
begin
  inherited;
  mdCommon.SaveToBinaryFile('memdata\memdatacommon');
end;

procedure TfrmFutureSingleTradeOrderInputGrid.clearData;
begin
  erStockCode.Properties.Editors[1].Width := 300;
end;

procedure TfrmFutureSingleTradeOrderInputGrid.comAssetIdPropertiesEditValueChanged(
  Sender: TObject);
begin
  inherited;
  mdAssetInfo.Locate(comAssetId.Properties.KeyFieldNames,
    mdCommonAssetId.AsString, [loCaseInsensitive]);
  mdCommonAssetName.AsString := mdAssetInfoAssetName.AsString;
end;

procedure TfrmFutureSingleTradeOrderInputGrid.comInvestTypePropertiesEditValueChanged(
  Sender: TObject);
begin
  inherited;
  mdInvestInfo.Locate(comInvestType.Properties.KeyFieldNames,
    mdCommonInvestType.AsString, [loCaseInsensitive]);
end;

procedure TfrmFutureSingleTradeOrderInputGrid.comPriceTypePropertiesEditValueChanged(
  Sender: TObject);
begin
  inherited;
  mdPriceInfo.Locate(comPriceType.Properties.KeyFieldNames,
    mdCommonPriceType.AsString, [loCaseInsensitive]);
end;

procedure TfrmFutureSingleTradeOrderInputGrid.comProductIdPropertiesEditValueChanged(
  Sender: TObject);
begin
  inherited;
  mdProductInfo.Locate(comProductId.Properties.KeyFieldNames,
    mdCommonProductId.AsString, [loCaseInsensitive]);
  mdCommonProductName.AsString := mdProductInfoProductName.AsString;
  mdAssetInfo.ProgrammedFilter := False;
  mdAssetInfo.UpdateFilters;
  mdAssetInfo.ProgrammedFilter := True;
  mdAssetInfo.FilterList.Clear;
  while not mdAssetInfo.Eof do
  begin
    if mdAssetInfoProductId.AsString = mdCommonProductId.AsString then
      mdAssetInfo.FilterList.Add(mdAssetInfo.RecNo);
    mdAssetInfo.Next;
  end;
  mdAssetInfo.UpdateFilters;
  if not mdAssetInfo.Eof then
  begin
    mdCommonAssetId.AsString := mdAssetInfoAssetId.AsString;
    mdCommonAssetName.AsString := mdAssetInfoAssetName.AsString;
  end
  else
  begin
    mdCommonAssetId.AsString := EmptyStr;
    mdCommonAssetName.AsString := EmptyStr;
  end;
end;

procedure TfrmFutureSingleTradeOrderInputGrid.comStockCodePropertiesEditValueChanged(
  Sender: TObject);
begin
  inherited;
  mdStockInfo.Locate(comStockCode.Properties.KeyFieldNames,
    mdCommonInterCode.AsString, [loCaseInsensitive]);
  mdCommonMarketNo.AsString := mdStockInfoMarketNo.AsString;
  mdCommonStockCode.AsString := mdStockInfoStockCode.AsString;
  mdCommonStockName.AsString := mdStockInfoStockName.AsString;
  if mdCommonMarketNo.AsString <> '7' then
  begin
    erStockCode.Properties.Editors[1].Width := 300;
  end
  else
  begin
    erStockCode.Properties.Editors[1].Width := 100;
  end;
end;

procedure TfrmFutureSingleTradeOrderInputGrid.FormCreate(Sender: TObject);
begin
  inherited;
  clearData;
end;

end.
